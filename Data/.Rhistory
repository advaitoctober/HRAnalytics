rm(list = ls())
setwd("/Users/varadtupe/Documents/GitHub/HRAnalytics/Data")
getwd()
require(class)
hrData <- read.delim("/Users/varadtupe/Documents/GitHub/HRAnalytics/Data/HR_comma_sep.csv", sep = ",", header= TRUE)
attach(hrData)
highSal = subset(hrData, salary == "high")
medSal = subset(hrData, salary =="medium")
lowSal = subset(hrData, salary == "low")
summary(highSal)
summary(lowSal)
nrow(subset(highSal, left ==1)) #82/1237 6.66%
nrow(subset(medSal, left ==1)) #1317/6446 20.43%
nrow(subset(lowSal, left ==1)) #2127/7316 29.07%
vSal = c('low','meduim','high')
vTotPop = c(nrow(lowSal),nrow(medSal),nrow(highSal))
vSalLeft = c(nrow(subset(lowSal, left ==1)),nrow(subset(medSal, left ==1)),nrow(subset(highSal, left ==1)) )
salDF = data.frame(Salary=vSal,TotalEmployees = vTotPop, EmployeesLeft=vSalLeft)
salDF["PercentLeft"] = (salDF["EmployeesLeft"]/salDF["TotalEmployees"])*100)
salDF["PercentLeft"] = (salDF["EmployeesLeft"]/salDF["TotalEmployees"])*100
View(salDF)
View(salDF)
salDF["EmployeesStayed"] = (salDF["TotalEmployees"]-salDF["EmployeesLeft"])
barplot(salDF$PercentLeft)
barplot(salDF$PercentLeft,names.arg = salDF$Salary)
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary")
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary", height = 10)
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary", height = 100)
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary", height = 10)
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary")
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary",ylim = 30)
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary",ylim = 25)
salDF$PercentLeft
barplot(salDF$PercentLeft,names.arg = salDF$Salary,ylab = "Attrition Percent",xlab = "Salary")
summary(hrData)
plot(hrData$promotion_last_5years)
promo1Left = subset(hrData,promotion_last_5years =1 and left=1)
promo1Left = subset(hrData,promotion_last_5years ==1 and left==1)
promo1Left = subset(hrData,promotion_last_5years ==1 & left==1)
promo1Left
promo1Left = nrow(subset(hrData,promotion_last_5years ==1 & left==1))
promo1Left
promo0Left = nrow(subset(hrData,promotion_last_5years ==1 & left==1))
promo0Left
promo0Left = nrow(subset(hrData,promotion_last_5years ==0 & left==1))
promo0Left
promo1Stay = nrow(subset(hrData,promotion_last_5years ==1 & left==0))
promo0Stay = nrow(subset(hrData,promotion_last_5years ==0 & left==0))
promo1Stay
promo0Stay
promoDF = data.frame(Promoted = c(promo1Stay,promo1Left),NotPromoted=c(promo0Stay,promo0Left))
View(promoDF)
View(promoDF)
rownames(promoDF) = c("Stayed","Left")
View(promoDF)
View(promoDF)
View(promoDF)
View(promoDF)
plot(promoDF)
bar(promoDF)
barplot(promoDF)
barplot(promoDF)
library(ggplot2)
promoDF = data.frame(Promoted = c("Promoted","Promoted","NotPromoted","NotPromoted") ,Left = c("Stayed","Left","Stayed","Left"),NoOfEmployees = c(promo1Stay,promo1Left,promo0Stay,promo0Left))
View(promoDF)
View(promoDF)
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left,xlab = "Promotion") +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
cor(hrData[,1:8])
pairs(highSal)
pairs(medSal)
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left,xlab("Promotion"))) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left,xlab="Promotion")) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left, xlab="Promotion")) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left, xlab ="Promotion")) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge", xlab ="Promotion") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),promoDF$NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(promoDF$Promoted),NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(factor(Promoted),NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
promoDF = data.frame(Promotion = c("Promoted","Promoted","NotPromoted","NotPromoted") ,Left = c("Stayed","Left","Stayed","Left"),NoOfEmployees = c(promo1Stay,promo1Left,promo0Stay,promo0Left))
ggplot(promoDF, aes(factor(Promotion),NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(Promotion,NoOfEmployees , fill = promoDF$Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(Promotion,NoOfEmployees , fill = Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
hrData$last_evaluation
summary(hrData$last_evaluation)
plot(hrData$last_evaluation)
plot(hrData$last_evaluation[which(left=1)])
plot(hrData$last_evaluation[which(left==1)])
plot(hrData$last_evaluation[which(left==0)])
attach(hrData)
aggregate(sales~left,data = hrData,sum)
aggregate(department~left,data = hrData,sum)
department
aggregate(department~left,data = hrData,sum)
aggregate(left~department,data = hrData,sum)
aggregate(left~department,data = hrData,count)
aggregate(left~department,data = hrData,sum)
?aggregate
aggregate(left~department,data = hrData,FUN = sum)
aggregate(left~department,data = hrData,FUN = count)
aggregate(left~department,data = hrData,FUN = count.fields
summary(hrData$last_evaluation)
plot(hrData$last_evaluation[which(left==0)])
cor(hrData[,1:8])
pairs(highSal)
pairs(medSal)
aggregate(left~department,data = hrData,FUN = count)
aggregate(left~department,data = hrData,FUN = count)
aggregate(left~department,data = hrData,FUN = length())
aggregate(left~department,data = hrData,FUN = length
summary(hrData$last_evaluation)
plot(hrData$last_evaluation[which(left==0)])
cor(hrData[,1:8])
pairs(highSal)
pairs(medSal)
pairs(lowSal)
#By work accident
nrow(subset(highSal, Work_accident ==1)) # 192
nrow(subset(medSal, Work_accident ==1)) #937
nrow(subset(lowSal, Work_accident ==1)) #1040
#To check whether employee satisfication level is sufficicent to predict whether employee will leave or not
sfLvl_left = data.frame(hrData$left,hrData$satisfaction_level)
sfLvl_left$hrData.predLeft =  ifelse(sfLvl_left$hrData.satisfaction_level < 0.5,1,0)
sfLvl_left$hrData.satisfaction_level = NULL
cor(sfLvl_left)
require(utils)
mean(sfLvl_left$hrData.left != sfLvl_left$hrData.predLeft) #20% error
aggregate(left~department,data = hrData,FUN = length)
aggregate(left~department,data = hrData,FUN = length,sum)
aggregate(left~department,data = hrData,FUN = length,sum)
aggregate(left~department,data = hrData,FUN = length)
aggregate(left~department,data = hrData,FUN = sum)
aggregate(left~department,data = hrData,FUN = sum)[,2]
depDF = data.frame(aggregate(left~department,data = hrData,FUN = length))
View(depDF)
View(depDF)
colnames(depDF) = c("Department","TotalEmployees")
depDF$Left = (aggregate(left~department,data = hrData,FUN = length))[,2]
depDF$Stayed = depDF$TotalEmployees - depDF$Left
depDF$Attrition = (depDF$Left / depDF$TotalEmployees) * 100
depDF$Left = (aggregate(left~department,data = hrData,FUN = sum))[,2]
depDF$Stayed = depDF$TotalEmployees - depDF$Left
depDF$Attrition = (depDF$Left / depDF$TotalEmployees) * 100
ggplot(depDF, aes(Attrition,fill = Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(depDF, aes(Attrition,TotalEmployees , fill = Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(depDF, aes(Left,TotalEmployees , fill = Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(dfm,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
ggplot(depDF,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
depDFMelt = melt(depDF)
require(reshape2)
depDFMelt = melt(depDF)
View(depDFMelt)
View(depDFMelt)
depDFMelt = melt(depDF,c("Stayed","Left"))
depDFMelt
depDFMelt = melt(depDF[,c("Stayed","Left")])
depDFMelt
depDFMelt = melt(depDF[,c("Department","Stayed","Left")])
depDFMelt
ggplot(depDF,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
ggplot(depDF,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
ggplot(depDFMelt,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
ggplot(depDFMelt,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
ggplot(depDFMelt,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_fill_brewer(palette = "Set1")
ggplot(depDFMelt,aes(x = department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
department
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
ggplot(promoDF, aes(Promotion,NoOfEmployees , fill = Left)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(promoDF, aes(Promotion,NoOfEmployees , fill = Left)) +
geom_bar(stat="identity", position = "dodge")
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
line(depDF$Department,depDF$Attrition)
depDFMelt
depDFMelt = melt(depDF[,c("Department","Stayed","Left","Attrition")])
depDFMelt
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
line(depDF$Department,depDF$Attrition)
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
line(depDF$Department,depDF$Attrition)
depDFMelt = melt(depDF[,c("Department","Stayed","Left")])
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
line(depDF$Department,depDF$Attrition)
depDFMelt = melt(depDF[,c("Department","Stayed","Left")])
depDFMelt
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
line(depDF$Department,depDF$Attrition)
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
ggplot(depDF,aes(x = Department,y = Attrition)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
source('~/Documents/GitHub/HRAnalytics/RScripts/EDA.R', echo=TRUE)
ggplot(depDF,aes(x = Department,y = Attrition))
ggplot(depDF,aes(x = Department,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")
stat
geom_bar
ggplot(depDF,aes(x = Department,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")
satDF = hrData[,c("satisfaction_level","left")]
View(satDF)
View(satDF)
satDF = hrData[,c("satisfaction_level","left")]
salDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High")
salDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High",)
salDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High","")
salDF
satDF = hrData[,c("satisfaction_level","left")]
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High","")
vSal = c('low','meduim','high')
vTotPop = c(nrow(lowSal),nrow(medSal),nrow(highSal))
vSalLeft = c(nrow(subset(lowSal, left ==1)),nrow(subset(medSal, left ==1)),nrow(subset(highSal, left ==1)) )
salDF = data.frame(Salary=vSal,TotalEmployees = vTotPop, EmployeesLeft=vSalLeft)
salDF["PercentLeft"] = (salDF["EmployeesLeft"]/salDF["TotalEmployees"])*100
salDF["EmployeesStayed"] = (salDF["TotalEmployees"]-salDF["EmployeesLeft"])
satDF
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High","")
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.4 & satDF$satisfaction_level< 0.6,"Medium","")
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.2 & satDF$satisfaction_level< 0.4,"Low","")
satDF$sat_category = ifelse(satDF$satisfaction_level< 0.2,"Very Low","")
View(satDF)
View(satDF)
satDF
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High","")
satDF
satDF$sat_category = ifelse((satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8),"High","")
satDF
satDF$sat_category = ifelse(satDF$satisfaction_level< 0.2,"Very Low","")
satDF
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High",ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High",ifelse(satDF$satisfaction_level>= 0.4 & satDF$satisfaction_level< 0.6,"Medium","")))
satDF
satDF$sat_category = ifelse(satDF$satisfaction_level>= 0.8,"Very High",ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High",ifelse(satDF$satisfaction_level>= 0.4 & satDF$satisfaction_level< 0.6,"Medium",ifelse(satDF$satisfaction_level>= 0.2 & satDF$satisfaction_level< 0.4,"Low",ifelse(satDF$satisfaction_level< 0.2,"Very Low","")))))
satDF
satAggDF = data.frame(aggregate(left~sat_category,data = satDF,FUN = length))
satAggDF
colnames(satAggDF) = c("SatisfactionCategory","TotalEmployees")
satAggDF$Left = (aggregate(left~sat_category,data = satDF,FUN = sum))[,2]
satAggDF
satAggDF$Stayed = satAggDF$TotalEmployees - satAggDF$Left
satAggDF$Attrition = (satAggDF$Left / satAggDF$TotalEmployees) * 100
satAggDF
satDF$sat_category = as.factor(ifelse(satDF$satisfaction_level>= 0.8,"Very High",ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High",ifelse(satDF$satisfaction_level>= 0.4 & satDF$satisfaction_level< 0.6,"Medium",ifelse(satDF$satisfaction_level>= 0.2 & satDF$satisfaction_level< 0.4,"Low",ifelse(satDF$satisfaction_level< 0.2,"Very Low","")))))
satAggDF = data.frame(aggregate(left~sat_category,data = satDF,FUN = length))
colnames(satAggDF) = c("SatisfactionCategory","TotalEmployees")
satAggDF$Left = (aggregate(left~sat_category,data = satDF,FUN = sum))[,2]
satAggDF$Stayed = satAggDF$TotalEmployees - satAggDF$Left
satAggDF$Attrition = (satAggDF$Left / satAggDF$TotalEmployees) * 100
satDFMelt = melt(satDF[,c("sat_category","Left")])
ggplot(depDFMelt,aes(x = Department,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
plot(hrData$last_evaluation[which(left==0)])
cor(hrData[,1:8])
#By work accident
nrow(subset(highSal, Work_accident ==1)) # 192
nrow(subset(medSal, Work_accident ==1)) #937
nrow(subset(lowSal, Work_accident ==1)) #1040
#To check whether employee satisfication level is sufficicent to predict whether employee will leave or not
sfLvl_left = data.frame(hrData$left,hrData$satisfaction_level)
sfLvl_left$hrData.predLeft =  ifelse(sfLvl_left$hrData.satisfaction_level < 0.5,1,0)
sfLvl_left$hrData.satisfaction_level = NULL
cor(sfLvl_left)
require(utils)
mean(sfLvl_left$hrData.left != sfLvl_left$hrData.predLeft) #20% error
satDF$sat_category = as.factor(ifelse(satDF$satisfaction_level>= 0.8,"Very High",ifelse(satDF$satisfaction_level>= 0.6 & satDF$satisfaction_level< 0.8,"High",ifelse(satDF$satisfaction_level>= 0.4 & satDF$satisfaction_level< 0.6,"Medium",ifelse(satDF$satisfaction_level>= 0.2 & satDF$satisfaction_level< 0.4,"Low",ifelse(satDF$satisfaction_level< 0.2,"Very Low",""))))))
satAggDF = data.frame(aggregate(left~sat_category,data = satDF,FUN = length))
colnames(satAggDF) = c("SatisfactionCategory","TotalEmployees")
satAggDF$Left = (aggregate(left~sat_category,data = satDF,FUN = sum))[,2]
satAggDF$Stayed = satAggDF$TotalEmployees - satAggDF$Left
satAggDF$Attrition = (satAggDF$Left / satAggDF$TotalEmployees) * 100
satAggDF
satDFMelt = melt(satDF[,c("SatisfactionCategory","Stayed","Left")])
satAggDF
satAggDF$Attrition = (satAggDF$Left / satAggDF$TotalEmployees) * 100
satAggDF
satDFMelt
satDFMelt = melt(satDF[,c("SatisfactionCategory","Stayed","Left")])
satDFMelt = melt(satDF[,c("SatisfactionCategory","Stayed","Left")])
satDF
colnames(satAggDF) = c("SatisfactionCategory","TotalEmployees")
satAggDF$Left = (aggregate(left~sat_category,data = satDF,FUN = sum))[,2]
satAggDF$Stayed = satAggDF$TotalEmployees - satAggDF$Left
satAggDF$Attrition = (satAggDF$Left / satAggDF$TotalEmployees) * 100
satDF
satDFMelt = melt(satDF[,c("sat_category","Stayed","Left")])
satDFMelt = melt(satAggDF[,c("SatisfactionCategory","Stayed","Left")])
satDFMelt
ggplot(satDFMelt,aes(x = SatisfactionCategory,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
satAggDF
satDFMelt
ggplot(satDFMelt,aes(x = SatisfactionCategory,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")+
scale_x_discrete(limits=c("Very Low","Low","Medium","High","Very High"))
ggplot(satAggDF,aes(x = SatisfactionCategory,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")
ggplot(satAggDF,aes(x = SatisfactionCategory,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")+
scale_x_discrete(limits=c("Very Low","Low","Medium","High","Very High"))
ggplot(satAggDF,aes(x = SatisfactionCategory,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")+
scale_x_discrete(limits=c("Very Low","Low","Medium","High","Very High"))+
scale_colour_manual(values = rev(brewer.pal(3,"BuPu")))
ggplot(satAggDF,aes(x = SatisfactionCategory,y = Attrition)) +
geom_bar(aes(fill = Attrition),stat = "identity",position = "dodge")+
scale_x_discrete(limits=c("Very Low","Low","Medium","High","Very High"))+
scale_colour_manual(values = rev(brewer.pal(3,"BuPu")))
save.image("~/Documents/GitHub/HRAnalytics/Data/EDA.RData")
